---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../consts';

import {linksData} from '../../content/links/linksData';

const tags = linksData.reduce((acc, link) => {
    for (const tag of link.tags) {
        const current = acc.get(tag) ?? 0;
        acc.set(tag, current + 1);
    }
    return acc;
}, new Map<string, number>())
---

<!doctype html>
<html lang="en">
<head>
    <BaseHead title={`Links — ${SITE_TITLE}`} description={SITE_DESCRIPTION} />
    <style>
        .tag {
            margin-right: .25em;
        }
        .tag > a.active {
            background-color: rgb(var(--accent-dark));
            color: var(--white);
        }
        blockquote {
            font-size: 1em;
        }
    </style>
</head>
<body>
<Header />
<main>
    <p class="tags">{
        [...tags.keys()]
            .filter((tag) => tags.get(tag)! > 1)
            .sort((a,b) => tags.get(b)! - tags.get(a)!)
            .slice(0, 10)
            .map((tag) =>
                (<span class="tag"><a href={`/links/tag/${tag}`}>{tag.replace('-', ' ')}</a><sup>{tags.get(tag)}</sup></span>)
            )
    }
    </p>
    <ul>
        {
            linksData.map(({url, title, comment, quote}) => (
                <li>
                    <a href={url}>{title}</a>
                    {comment && <>— {comment}</>}
                    {quote && <blockquote>{quote}</blockquote>}
                </li>
            ))
        }
    </ul>
</main>
<Footer />
</body>
</html>
